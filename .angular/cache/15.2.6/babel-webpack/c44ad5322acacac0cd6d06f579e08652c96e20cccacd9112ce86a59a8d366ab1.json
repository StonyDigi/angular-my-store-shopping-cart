{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n//Importálja az Productinterfészt ./products.tsa cart.service.tsfájlba, és az osztályban CartServiceadjon meg egy itemstulajdonságot az aktuális termékek tömbjének a kosárban tárolásához.\nexport class CartService {\n  constructor(http) {\n    this.http = http;\n    //bevásárló kosár tartalma\n    //Határozza meg a tételek kosárba helyezésének, a kosár tételeinek visszaküldésének és a kosár tételeinek törlésének módszereit.\n    this.items = [];\n  }\n  addToCart(product) {\n    this.items.push(product);\n  }\n  getItems() {\n    return this.items;\n  }\n  getShippingPrices() {\n    return this.http.get < {\n      type\n    };\n  }\n  clearCart() {\n    this.items = [];\n    return this.items;\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAGA;AAKA,OAAM,MAAOA,WAAW;EAKtBC,YACUC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IALd;IACA;IACA,UAAK,GAAc,EAAE;EAIjB;EAEJC,SAAS,CAACC,OAAgB;IACxB,IAAI,CAACC,KAAK,CAACC,IAAI,CAACF,OAAO,CAAC;EAC1B;EAEAG,QAAQ;IACN,OAAO,IAAI,CAACF,KAAK;EACnB;EAEAG,iBAAiB;IACf,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,GAAC;MAACC;IAAI,CAAC;EAC7B;EAEAC,SAAS;IACP,IAAI,CAACN,KAAK,GAAG,EAAE;IACf,OAAO,IAAI,CAACA,KAAK;EACnB;;AAxBWL,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAFV;AAAM","names":["CartService","constructor","http","addToCart","product","items","push","getItems","getShippingPrices","get","type","clearCart","factory","providedIn"],"sourceRoot":"","sources":["C:\\ANGULAR\\my-store\\src\\app\\cart.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Product } from './products';\nimport { Injectable } from '@angular/core';\n//Importálja az Productinterfészt ./products.tsa cart.service.tsfájlba, és az osztályban CartServiceadjon meg egy itemstulajdonságot az aktuális termékek tömbjének a kosárban tárolásához.\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  //bevásárló kosár tartalma\n  //Határozza meg a tételek kosárba helyezésének, a kosár tételeinek visszaküldésének és a kosár tételeinek törlésének módszereit.\n  items: Product[] = [];\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  addToCart(product: Product) {\n    this.items.push(product);\n  }\n\n  getItems() {\n    return this.items;\n  }\n\n  getShippingPrices() {\n    return this.http.get<{type}\n  }\n\n  clearCart() {\n    this.items = [];\n    return this.items;\n  }\n  \n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}